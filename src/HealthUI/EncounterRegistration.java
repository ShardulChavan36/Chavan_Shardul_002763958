/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package HealthUI;

import Healthmodel.DoctorDirectory;
import Healthmodel.Encounter;
import Healthmodel.EncounterHistory;
import Healthmodel.Hospital;
import Healthmodel.Patient;
import Healthmodel.PatientDirectory;
import Healthmodel.Person;
import Healthmodel.VitalSigns;
import Healthmodel.VitalSignsHistory;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chava
 */
public class EncounterRegistration extends javax.swing.JPanel {

    /**
     * Creates new form EncounterRegistration
     */
    
    DoctorDirectory docDir;
    EncounterHistory encHis;
    PatientDirectory patientDir;
    VitalSignsHistory vitalDir;
    public EncounterRegistration(PatientDirectory patientDir,DoctorDirectory docDir,EncounterHistory encHis,VitalSignsHistory vitalDir) {
        initComponents();
        this.docDir = docDir;
        this.encHis = encHis;
        this.patientDir = patientDir;
        this.vitalDir = vitalDir;
        encDispTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        patientHomeBtn = new javax.swing.JButton();
        patientLogoutBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        CreateEncounter = new javax.swing.JButton();
        ViewBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        PatientName = new javax.swing.JTextField();
        doctorID = new javax.swing.JTextField();
        encounterID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        patientBloodPressureLbl = new javax.swing.JLabel();
        vitalsBP = new javax.swing.JTextField();
        patientSugarLevel = new javax.swing.JTextField();
        patientSugarLevelLbl = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        vitalSymptoms = new javax.swing.JTextField();
        EncDiagnosis = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        vitalsTemp = new javax.swing.JTextField();
        patientID = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        DateChooser = new com.toedter.calendar.JDateChooser();
        timePicker = new com.github.lgooddatepicker.components.TimePicker();
        doctorName = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        UpdateBtn = new javax.swing.JButton();
        DelBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        encounterRegistrationTable = new javax.swing.JTable();

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        patientHomeBtn.setText("Home");
        patientHomeBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        patientHomeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientHomeBtnActionPerformed(evt);
            }
        });

        patientLogoutBtn.setText("Logout");
        patientLogoutBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        patientLogoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientLogoutBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 3, 18)); // NOI18N
        jLabel1.setText("Encounter Registration");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(patientHomeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(272, 272, 272)
                .addComponent(jLabel1)
                .addGap(274, 274, 274)
                .addComponent(patientLogoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientHomeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientLogoutBtn)
                    .addComponent(jLabel1))
                .addGap(9, 9, 9))
        );

        CreateEncounter.setText("Create");
        CreateEncounter.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CreateEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateEncounterActionPerformed(evt);
            }
        });

        ViewBtn.setText("View");
        ViewBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewBtnActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 3, 13))); // NOI18N

        jLabel2.setText("Patient Name");

        jLabel3.setText("Doctor ID");

        jLabel4.setText("Encounter ID");

        doctorID.setEditable(false);
        doctorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorIDActionPerformed(evt);
            }
        });

        encounterID.setEditable(false);

        jLabel5.setText("Time");

        patientBloodPressureLbl.setText("Blood Pressure");

        vitalsBP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vitalsBPActionPerformed(evt);
            }
        });

        patientSugarLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientSugarLevelActionPerformed(evt);
            }
        });

        patientSugarLevelLbl.setText("Sugar Level");

        jLabel6.setText("Symptoms");

        vitalSymptoms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vitalSymptomsActionPerformed(evt);
            }
        });

        jLabel7.setText("Diagnosis");

        jLabel8.setText("Date");

        jLabel9.setText("Body Temperature");

        vitalsTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vitalsTempActionPerformed(evt);
            }
        });

        patientID.setEditable(false);
        patientID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientIDActionPerformed(evt);
            }
        });

        jLabel10.setText("Patient ID");

        doctorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorNameActionPerformed(evt);
            }
        });

        jLabel11.setText("Doctor Name");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(PatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel3))
                                .addGap(16, 16, 16)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(doctorID)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(patientID, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(timePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(DateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(102, 102, 102))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(doctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(encounterID, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patientBloodPressureLbl)
                            .addComponent(patientSugarLevelLbl)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(vitalsTemp, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                            .addComponent(patientSugarLevel)
                            .addComponent(vitalsBP)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(50, 50, 50)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vitalSymptoms, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(EncDiagnosis))))
                .addGap(23, 23, 23))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(PatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(patientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(doctorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(doctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(encounterID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(DateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vitalsBP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientBloodPressureLbl))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(patientSugarLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(patientSugarLevelLbl))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vitalsTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vitalSymptoms, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EncDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap())
        );

        UpdateBtn.setText("Update");
        UpdateBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        UpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBtnActionPerformed(evt);
            }
        });

        DelBtn.setText("Delete");
        DelBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        DelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelBtnActionPerformed(evt);
            }
        });

        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        encounterRegistrationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Encounter ID", "Doctor ID", "Doctor Name", "Patient ID", "Patient Name", "Date", "Time", "Blood Pressure", "Sugar Level", "Body Temp", "Symptoms", "Diagnosis"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(encounterRegistrationTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(CreateEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(ViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(UpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(DelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CreateEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(UpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(DelBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void patientHomeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientHomeBtnActionPerformed
        // TODO add your handling code here:

        MainFrame newMainFrame = new MainFrame();
        newMainFrame.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_patientHomeBtnActionPerformed

    private void patientLogoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientLogoutBtnActionPerformed
        // TODO add your handling code here:

        LoginFrame newLoginPage = new LoginFrame();
        newLoginPage.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_patientLogoutBtnActionPerformed

    private void ViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBtnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=encounterRegistrationTable.getSelectedRow();
        if (selectedRowIndex1<0){
            JOptionPane.showMessageDialog(this,"Please select a row to View");
            return;
        }
        DefaultTableModel model1 = (DefaultTableModel) encounterRegistrationTable.getModel();
        Encounter selectedEnc=(Encounter)model1.getValueAt(selectedRowIndex1,0);
        PatientName.setText(selectedEnc.patient.person.getName());
        patientID.setText(String.valueOf(selectedEnc.patient.getPatientId()));
        doctorID.setText(String.valueOf(selectedEnc.doc.getDocId()));
        doctorName.setText(selectedEnc.doc.person.getName());
        encounterID.setText(String.valueOf(selectedEnc.getEncId()));
        DateChooser.setDate(selectedEnc.getEncDate());
        timePicker.setTime(selectedEnc.getEncTime());
        vitalsBP.setText(String.valueOf(selectedEnc.patient.vitalSigns.getBloodPressure()));
        vitalsTemp.setText(String.valueOf(selectedEnc.patient.vitalSigns.getBodyTemperature()));
        patientSugarLevel.setText(String.valueOf(selectedEnc.patient.vitalSigns.getSugarLevel()));
        vitalSymptoms.setText(selectedEnc.patient.vitalSigns.getSymptoms());
        EncDiagnosis.setText(selectedEnc.getEncDiagnosis());
        
    }//GEN-LAST:event_ViewBtnActionPerformed

    private void doctorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorIDActionPerformed

    private void vitalsBPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vitalsBPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vitalsBPActionPerformed

    private void patientSugarLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientSugarLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientSugarLevelActionPerformed

    private void vitalSymptomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vitalSymptomsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vitalSymptomsActionPerformed

    private void vitalsTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vitalsTempActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vitalsTempActionPerformed

    private void patientIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientIDActionPerformed

    private void CreateEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateEncounterActionPerformed
        // TODO add your handling code here:
        Encounter enc = new Encounter();
        enc.setEncId((int)(Math.random()*999+100));
        enc.patient.setPatientId((int)(Math.random()*9999+1000));
        enc.doc.setDocId((int)(Math.random()*99+10));
//        SimpleDateFormat encounterDate = new SimpleDateFormat("MMM-dd-yyyy");
        enc.setEncDate(DateChooser.getDate());
        enc.setEncTime(timePicker.getTime());
        enc.patient.person.setName(PatientName.getText());
        enc.doc.person.setName(doctorName.getText());
        enc.patient.vitalSigns.setSugarLevel(Float.parseFloat(patientSugarLevel.getText()));
        enc.patient.vitalSigns.setBloodPressure(Float.parseFloat(vitalsBP.getText()));
        enc.patient.vitalSigns.setBodyTemperature(Float.parseFloat(vitalsTemp.getText()));
        enc.patient.vitalSigns.setSymptoms(vitalSymptoms.getText());
        enc.setEncDiagnosis(EncDiagnosis.getText());
        EncounterHistory.encHis.add(enc);
        JOptionPane.showMessageDialog(this, "Encounter Successfully Added");
        encDispTable();
    }//GEN-LAST:event_CreateEncounterActionPerformed

    private void doctorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorNameActionPerformed

    private void UpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBtnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex1=encounterRegistrationTable.getSelectedRow();
        DefaultTableModel model1 = (DefaultTableModel) encounterRegistrationTable.getModel();
        Encounter selectedEnc=(Encounter)model1.getValueAt(selectedRowIndex1,0);
        selectedEnc.patient.person.setName(PatientName.getText());
        selectedEnc.doc.person.setName(doctorName.getText());
        selectedEnc.setEncDate(DateChooser.getDate());
        selectedEnc.setEncTime(timePicker.getTime());
        selectedEnc.patient.vitalSigns.setBloodPressure(Float.parseFloat(vitalsBP.getText()));
        selectedEnc.patient.vitalSigns.setSugarLevel(Float.parseFloat(patientSugarLevel.getText()));
        selectedEnc.patient.vitalSigns.setBodyTemperature(Float.parseFloat(vitalsTemp.getText()));
        selectedEnc.patient.vitalSigns.setSymptoms(vitalSymptoms.getText());
        selectedEnc.setEncDiagnosis((EncDiagnosis.getText()));
        encDispTable();
        
    }//GEN-LAST:event_UpdateBtnActionPerformed

    private void DelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelBtnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex=encounterRegistrationTable.getSelectedRow();
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a row to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) encounterRegistrationTable.getModel();
        System.out.print(model.getValueAt(selectedRowIndex,0));
        Encounter selectedEnc=(Encounter)model.getValueAt(selectedRowIndex,0);
        encHis.delEncDetails(selectedEnc);
        encDispTable();
    }//GEN-LAST:event_DelBtnActionPerformed
    public void encDispTable(){
            DefaultTableModel model1 = (DefaultTableModel) encounterRegistrationTable.getModel();
            model1.setRowCount(0);
            System.out.println("Done");
            for (Encounter es:EncounterHistory.getEncHis()){
                Object[] row=new Object[12];
                row[0]=es;
                row[1]=es.doc.getDocId();
                row[2]=es.doc.person.getName();
                row[3]=es.patient.getPatientId();
                row[4]=es.patient.person.getName();
                row[5]=es.getEncDate();
                row[6]=es.getEncTime();
                row[7]=es.patient.vitalSigns.getBloodPressure();
                row[8]=es.patient.vitalSigns.getSugarLevel();
                row[9]=es.patient.vitalSigns.getBodyTemperature();
                row[10]=es.patient.vitalSigns.getSymptoms();
                row[11]=es.getEncDiagnosis();
                model1.addRow(row);
            }
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateEncounter;
    private com.toedter.calendar.JDateChooser DateChooser;
    private javax.swing.JButton DelBtn;
    private javax.swing.JTextField EncDiagnosis;
    private javax.swing.JTextField PatientName;
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JButton ViewBtn;
    private javax.swing.JTextField doctorID;
    private javax.swing.JTextField doctorName;
    private javax.swing.JTextField encounterID;
    private javax.swing.JTable encounterRegistrationTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel patientBloodPressureLbl;
    private javax.swing.JButton patientHomeBtn;
    private javax.swing.JTextField patientID;
    private javax.swing.JButton patientLogoutBtn;
    private javax.swing.JTextField patientSugarLevel;
    private javax.swing.JLabel patientSugarLevelLbl;
    private com.github.lgooddatepicker.components.TimePicker timePicker;
    private javax.swing.JTextField vitalSymptoms;
    private javax.swing.JTextField vitalsBP;
    private javax.swing.JTextField vitalsTemp;
    // End of variables declaration//GEN-END:variables
}
